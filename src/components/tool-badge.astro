---
import { getEntry } from "astro:content";

interface Props {
  tool: string;
  ml?: string;
  mr?: string;
  redirectToUrl?: boolean;
}

const { tool, ml = "0", mr = "0", redirectToUrl = false } = Astro.props;
const currentTool = await getEntry("tools", tool);

const toolBadgeClass = redirectToUrl
  ? "tool-badge tool-badge-with-text"
  : "tool-badge";
---

{
  currentTool && (
    <a
      href={redirectToUrl ? currentTool.data.url : `/tag/${currentTool.id}`}
      target={redirectToUrl ? "_blank" : ""}
      rel="noopener noreferrer"
      class={toolBadgeClass}
      style={`margin-left: ${ml}rem; margin-right: ${mr}rem;`}
      title={
        redirectToUrl
          ? `Go to ${currentTool.data.name} website`
          : `See posts about ${currentTool.data.name}`
      }
    >
      <img
        src={currentTool.data.logo}
        alt={`${currentTool.data.name} logo`}
        class="tool-logo"
      />
      {redirectToUrl && (
        <span class="tool-badge-text">{currentTool.data.name}</span>
      )}
    </a>
  )
}

<style>
  .tool-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: var(--border);
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    height: 2rem;
    width: 2rem;
  }

  .tool-badge:hover {
    border-color: var(--border-hovered);
    background-color: #f5f5f5;
  }

  .tool-badge-with-text {
    height: 2rem;
    width: auto;
    padding: 0 0.5rem;
    gap: 0.5rem;
    text-decoration: none;
  }

  .tool-logo {
    width: 1.25rem;
    height: 1.25rem;
    object-fit: contain;
  }

  .tool-badge-text {
    color: var(--foreground);
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
  }
</style>
